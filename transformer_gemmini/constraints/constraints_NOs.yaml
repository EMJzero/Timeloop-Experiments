constraints:
  version: 0.4
  targets:
    # =======================================
    # DRAM
    # =======================================
    - target: DRAM
      type: dataspace
      keep: [Inputs, Outputs]
      bypass: [Weights] # the previous matmul accounts for the cost of writing outputs!
    #- target: DRAM
    #  type: temporal
    #  factors: D=1 E=1
    #  permutation: EDL
    # =======================================
    # Scratchpad Constraints
    # =======================================
    - target: Scratchpad
      type: dataspace
      keep: [Inputs, Outputs] # REMOVE INPUTS FROM HERE WHEN FUSING AT THE ACCUMULATOR!
      bypass: [Weights] # Indeed bypassing here Inputs (fusion) helps!
    #- target: Scratchpad
    #  type: temporal
    #  factors: [E=1, D=1]
    #- target: Scratchpad
    #  type: spatial
    #  factors: [E=1, D=1]
    # =======================================
    # Outputs Accumulator Constraints
    # =======================================
    - target: Accumulator
      type: dataspace
      keep: [Inputs]
      bypass: [Weights, Outputs]
      #no_coalesce: [Inputs, Outputs, Weights]
    #- target: Accumulator
    #  type: temporal
    #  maximize_dims: [[E]]
    #- target: Accumulator
    #  type: spatial
    #  factors: [E=1, D=1]
    #- target: Accumulator
    #  type: temporal
    #  factors: [E=1, D=1, L>=4]
    - target: Accumulator
      type: temporal
      permutation: [E, D, L]
      maximize_dims: [[E], [L]]
      # the first parenthesis is the number of entries in the Accumulator (only inputs kept), the second
      # parenthesis is the size of the registers at the PE level, see "E" factor below (line 79) !
      maximize_dims_capacity: (16384*4) // (1024)
    # =======================================
    # WS Registers Constraints
    # =======================================
    - target: Registers
      type: dataspace
      keep: [Weights]
      bypass: [Inputs, Outputs]
      #no_coalesce: [Inputs, Outputs, Weights]
    - target: Registers
      type: temporal
      factors: [D=1, E=1, L=1]
    - target: Registers_Outputs
      type: dataspace
      keep: [Outputs]
      bypass: [Inputs, Weights]
    - target: Registers_Outputs
      type: temporal
      factors: [D=1, E=1, L=1]
    - target: Registers_Inputs
      type: dataspace
      keep: [Inputs]
      bypass: [Weights, Outputs]
    - target: Registers_Inputs
      type: temporal
      # fix E to the number of entries in the Input and Output register files!
      # letting D to 0 here avoids searching for bad mappings, as it does all sweeps over a column in one shot!
      factors: [E=1024, L=1] # D=0
      # from inner to outer: column sweep, next sweep, change column
      permutation: [E, D, L]

# 0 is a special factor, it means to use the full dimension!