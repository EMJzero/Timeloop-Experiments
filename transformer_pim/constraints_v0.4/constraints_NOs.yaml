constraints:
  version: 0.4
  #template: ruby
  targets:
    # REMEMBER:
    # D from the KTQ is the E here
    # L from the KTQ is the L here
    # lock E and D at 1 in the memory hierarchy down to the level at which to perform fusion!
    # (if already DRAM has D or E not 1, you can't fuse...)

    # =======================================
    # DRAM
    # =======================================
    - target: DRAM
      type: dataspace
      keep: [Inputs, Outputs]
      bypass: [Weights]  # weights are fakes here
    #- target: DRAM
    #  type: temporal
    #  factors: D=1 E=1 # copied from KTQ mapping, see REMEMBER!
    #  permutation: DEL
    # =======================================
    # Global Buffer Constraints
    # =======================================
    - target: shared_glb
      type: dataspace
      keep: [Inputs, Outputs]
      bypass: [Weights] # weights are fakes here
    - target: shared_glb
      type: temporal
      permutation: [E, D, L]
      maximize_dims: [[E], [L]]
      # the first parenthesis is the number of entries in the Accumulator (shared between inputs and outputs), the
      # second parenthesis is the size of the registers at the PE level, see "E" factor below (line 79) !
      maximize_dims_capacity: (16384*4*4) // (1024*2)
    # =======================================
    # Global Buffer Constraints
    # =======================================
    - target: IMC_as_buffer
      type: dataspace
      keep: []
      bypass: [Inputs, Weights, Outputs] # currently unused
    - target: IMC_as_buffer
      type: temporal
      factors: [D=1, E=1, L=1] # currently unused
    # =======================================
    # Dummy Buffer Constraints
    # =======================================
    #- target: dummy_buffer
    #  type: dataspace
    #  keep: []
    #  bypass: [Inputs, Outputs, Weights]  # no data should be stored in dummy, it is just a transition buffer
    #- target: dummy_buffer
    #  type: spatial
    #  factors: [L=1, D=1]
    #- target: dummy_buffer
    #  type: temporal
    #  factors: [D=1, E=1]
    # =======================================
    # WS Registers Constraints
    # =======================================
    - target: Registers
      type: dataspace
      keep: [Weights]
      bypass: [Inputs, Outputs]
      #no_coalesce: [Inputs, Outputs, Weights]
    - target: Registers
      type: temporal
      factors: [D=1, E=1, L=1]
    - target: Registers_Outputs
      type: dataspace
      keep: [Outputs]
      bypass: [Inputs, Weights]
    - target: Registers_Outputs
      type: temporal
      factors: [D=1, E=1, L=1]
    - target: Registers_Inputs
      type: dataspace
      keep: [Inputs]
      bypass: [Weights, Outputs]
    - target: Registers_Inputs
      type: temporal
      # fix E to the number of entries in the Input and Output register files!
      # letting D to 0 here avoids searching for bad mappings, as it does all sweeps over a column in one shot!
      factors: [E=1024, L=1] # D=0
      # from inner to outer: column sweep, next sweep, change column
      permutation: [E, D, L]

# IMPORTANT: we do not store any output either, values are updated in place!